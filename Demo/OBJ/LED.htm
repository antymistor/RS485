<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\OBJ\LED.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\OBJ\LED.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Thu Apr 09 16:12:58 2020
<BR><P>
<H3>Maximum Stack Usage =        108 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; RS485_init &rArr; USART_Init &rArr; RCC_GetClocksFreq
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[2c]">DMA1_Stream7_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[2f]">DMA2_Stream0_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[30]">DMA2_Stream1_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[31]">DMA2_Stream2_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[32]">DMA2_Stream3_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[33]">DMA2_Stream4_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[34]">DMA2_Stream5_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[35]">DMA2_Stream6_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[36]">DMA2_Stream7_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[2a]">EXTI15_10_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[1d]">EXTI9_5_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[3c]">FMPI2C1_ER_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[3b]">FMPI2C1_EV_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[39]">FPU_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[23]">I2C1_ER_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[22]">I2C1_EV_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[25]">I2C2_ER_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[24]">I2C2_EV_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[3d]">LPTIM1_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[38]">RNG_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[2b]">RTC_Alarm_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[26]">SPI1_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[27]">SPI2_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[3a]">SPI5_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from delay.o(i.SysTick_Handler) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[3f]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f410xx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[1e]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[21]">TIM1_CC_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[20]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[1f]">TIM1_UP_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[2d]">TIM5_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[2e]">TIM6_DAC_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[28]">USART1_IRQHandler</a> from rs232.o(i.USART1_IRQHandler) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[29]">USART2_IRQHandler</a> from rs485.o(i.USART2_IRQHandler) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[37]">USART6_IRQHandler</a> from rs422.o(i.USART6_IRQHandler) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f410xx.o(.text) referenced from startup_stm32f410xx.o(RESET)
 <LI><a href="#[40]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f410xx.o(.text)
 <LI><a href="#[3e]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[40]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(.text)
</UL>
<P><STRONG><a name="[7b]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[41]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[44]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7c]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[7d]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[7e]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[7f]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[80]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.emb_text), UNUSED)

<P><STRONG><a name="[82]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text), UNUSED)

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text), UNUSED)

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>FMPI2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>FMPI2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f410xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[84]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>CRC16_MODBUS</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, modbus.o(i.CRC16_MODBUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CRC16_MODBUS &rArr; InvertUint16
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvertUint8
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvertUint16
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODBUS_SEND2
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODBUS_SEND
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>GILL_crc</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, gill.o(i.GILL_crc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GILL_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[48]"></a>GILL_enablepull</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gill.o(i.GILL_enablepull))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GILL_enablepull &rArr; RS485_senddata &rArr; RS485_modeset
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_senddata
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_init
</UL>

<P><STRONG><a name="[58]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_init
</UL>

<P><STRONG><a name="[5f]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_modeset
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_init
</UL>

<P><STRONG><a name="[61]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_modeset
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>InvertUint16</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, modbus.o(i.InvertUint16))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = InvertUint16
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16_MODBUS
</UL>

<P><STRONG><a name="[46]"></a>InvertUint8</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, modbus.o(i.InvertUint8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InvertUint8
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16_MODBUS
</UL>

<P><STRONG><a name="[4a]"></a>MODBUS_SEND</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, modbus.o(i.MODBUS_SEND))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MODBUS_SEND &rArr; CRC16_MODBUS &rArr; InvertUint16
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16_MODBUS
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_senddata
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODBUS_init
</UL>

<P><STRONG><a name="[4b]"></a>MODBUS_SEND2</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, modbus.o(i.MODBUS_SEND2))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = MODBUS_SEND2 &rArr; CRC16_MODBUS &rArr; InvertUint16
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16_MODBUS
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_senddata
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODBUS_init
</UL>

<P><STRONG><a name="[4c]"></a>MODBUS_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, modbus.o(i.MODBUS_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = MODBUS_init &rArr; MODBUS_SEND2 &rArr; CRC16_MODBUS &rArr; InvertUint16
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODBUS_SEND2
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODBUS_SEND
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>MTI_gotomeasurement</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, mti.o(i.MTI_gotomeasurement))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MTI_gotomeasurement &rArr; delay_ms &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mti_checksum
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_senddata
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_init
</UL>

<P><STRONG><a name="[50]"></a>MTI_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mti.o(i.MTI_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MTI_init &rArr; MTI_setoutputskipfactor &rArr; delay_ms &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setoutputskipfactor
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setoutputconfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setfilterprofile
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setbaudrate
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_gotomeasurement
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>MTI_setbaudrate</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, mti.o(i.MTI_setbaudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MTI_setbaudrate &rArr; delay_ms &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mti_checksum
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_senddata
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_init
</UL>

<P><STRONG><a name="[53]"></a>MTI_setfilterprofile</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, mti.o(i.MTI_setfilterprofile))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MTI_setfilterprofile &rArr; delay_ms &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mti_checksum
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_senddata
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_init
</UL>

<P><STRONG><a name="[51]"></a>MTI_setoutputconfig</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, mti.o(i.MTI_setoutputconfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MTI_setoutputconfig &rArr; delay_ms &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mti_checksum
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_senddata
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_init
</UL>

<P><STRONG><a name="[54]"></a>MTI_setoutputskipfactor</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, mti.o(i.MTI_setoutputskipfactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MTI_setoutputskipfactor &rArr; delay_ms &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mti_checksum
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_senddata
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_init
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_init
</UL>

<P><STRONG><a name="[56]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_init
</UL>

<P><STRONG><a name="[57]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_init
</UL>

<P><STRONG><a name="[6c]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[55]"></a>RS485_init</STRONG> (Thumb, 228 bytes, Stack size 40 bytes, rs485.o(i.RS485_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = RS485_init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>RS485_modeset</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rs485.o(i.RS485_modeset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RS485_modeset
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_senddata
</UL>

<P><STRONG><a name="[49]"></a>RS485_senddata</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, rs485.o(i.RS485_senddata))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RS485_senddata &rArr; RS485_modeset
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_modeset
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setoutputskipfactor
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setoutputconfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setfilterprofile
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setbaudrate
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_gotomeasurement
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODBUS_SEND2
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODBUS_SEND
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEM_pidinit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GILL_enablepull
</UL>

<P><STRONG><a name="[64]"></a>SEM_pidinit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, semctr.o(i.SEM_pidinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SEM_pidinit &rArr; RS485_senddata &rArr; RS485_modeset
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getcksm
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_senddata
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, delay.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SysTick_Handler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(.text)
</UL>
<P><STRONG><a name="[28]"></a>USART1_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, rs232.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>USART2_IRQHandler</STRONG> (Thumb, 1424 bytes, Stack size 8 bytes, rs485.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USART2_IRQHandler &rArr; CRC16_MODBUS &rArr; InvertUint16
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getcksm
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mti_checksum
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GILL_crc
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16_MODBUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USART6_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, rs422.o(i.USART6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART6_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_init
</UL>

<P><STRONG><a name="[5b]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_init
</UL>

<P><STRONG><a name="[62]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_senddata
</UL>

<P><STRONG><a name="[69]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f4xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f4xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_init
</UL>

<P><STRONG><a name="[5a]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_init
</UL>

<P><STRONG><a name="[6a]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[63]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_senddata
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f410xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[86]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[87]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[6d]"></a>delay_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, delay.o(i.delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>delay_ms</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, delay.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = delay_ms &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setoutputskipfactor
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setoutputconfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setfilterprofile
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setbaudrate
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_gotomeasurement
</UL>

<P><STRONG><a name="[70]"></a>delay_us</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, delay.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[4e]"></a>get_mti_checksum</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mti.o(i.get_mti_checksum))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setoutputskipfactor
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setoutputconfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setfilterprofile
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_setbaudrate
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_gotomeasurement
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[65]"></a>getcksm</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, semctr.o(i.getcksm))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEM_pidinit
</UL>

<P><STRONG><a name="[3e]"></a>main</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = main &rArr; RS485_init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEM_pidinit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTI_init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODBUS_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GILL_enablepull
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[72]"></a>uxListRemove</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[74]"></a>vListInsert</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[73]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[79]"></a>vPortEnterCritical</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[7a]"></a>vPortExitCritical</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[6f]"></a>vTaskDelay</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, tasks.o(i.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[75]"></a>vTaskSuspendAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[43]"></a>vTaskSwitchContext</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[67]"></a>xPortSysTickHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, port.o(i.xPortSysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[66]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[77]"></a>xTaskIncrementTick</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[76]"></a>xTaskResumeAll</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[68]"></a>SetSysClock</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[71]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[78]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
